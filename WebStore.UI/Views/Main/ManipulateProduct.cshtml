@model  WebStore.BusinessLogic.DTO.Product.ProductDTO
@{
    ViewBag.Title = "ManipulateProduct";

    bool? isEdit = ViewBag.IsEdit;
    var action = isEdit.HasValue && isEdit.Value ? "EditProduct" : "AddProduct";
    var list = ((IEnumerable<SelectListItem>)ViewBag.Categories).ToList();
}

<h2>Редактирование товара</h2>

@using (Html.BeginForm(action, "Main", FormMethod.Post, new { @class = "form-horizontal" }))
{

    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <div class="form-group">
        @Html.LabelFor(x => x.Name)
        @Html.TextBoxFor(x => x.Name, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.Name)
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.CategoryId)
        @Html.DropDownListFor(x => x.CategoryId, list, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.CategoryId)
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.Description)
        @Html.TextBoxFor(x => x.Description, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.Description)
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.Price)
        @Html.TextBoxFor(x => x.Price, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.Price)
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.IsDeleted)
        @Html.CheckBoxFor(x => x.IsDeleted)
        @Html.ValidationMessageFor(x => x.IsDeleted)
    </div>

    <input type="submit" value="Сохранить" />
}

